use bytemuck::{Pod, Zeroable};
use serde::Serialize;

use crate::packet::header;

#[repr(C, packed)]
#[derive(Clone, Copy, Debug, Zeroable, Pod, Serialize)]
pub struct MarshalZone {
    pub m_zone_start: f32,
    pub m_zone_flag: i8,
}

#[repr(C, packed)]
#[derive(Clone, Copy, Debug, Zeroable, Pod, Serialize)]
pub struct WeatherForecastSample {
    pub m_session_type: u8,
    pub m_time_offset: u8,
    pub m_weather: u8,
    pub m_track_temperature: i8,
    pub m_track_temperature_change: i8,
    pub m_air_temperature: i8,
    pub m_air_temperature_change: i8,
    pub m_rain_percentage: u8,
}

// TODO serde
#[repr(C, packed)]
#[derive(Clone, Copy, Debug, Zeroable, Pod)]
pub struct PacketSession {
    pub m_header: header::PacketHeader,
    pub m_weather: u8,
    pub m_track_temperature: i8,
    pub m_air_temperature: i8,
    pub m_total_laps: u8,
    pub m_track_length: u16,
    pub m_session_type: u8,
    pub m_track_id: i8,
    pub m_formula: u8,
    pub m_session_time_left: u16,
    pub m_session_duration: u16,
    pub m_pit_speed_limit: u8,
    pub m_game_paused: u8,
    pub m_is_spectating: u8,
    pub m_spectator_car_index: u8,
    pub m_sli_pro_native_support: u8,
    pub m_num_marshal_zones: u8,
    pub m_marshal_zones: [MarshalZone; 21],
    pub m_safety_car_status: u8,
    pub m_network_game: u8,
    pub m_num_weather_forecast_samples: u8,
    pub m_weather_forecast_samples: [WeatherForecastSample; 64],
    pub m_forecast_accuracy: u8,
    pub m_ai_difficulty: u8,
    pub m_season_link_identifier: u32,
    pub m_weekend_link_identifier: u32,
    pub m_session_link_identifier: u32,
    pub m_pit_stop_window_ideal_lap: u8,
    pub m_pit_stop_window_latest_lap: u8,
    pub m_pit_stop_rejoin_position: u8,
    pub m_steering_assist: u8,
    pub m_braking_assist: u8,
    pub m_gearbox_assist: u8,
    pub m_pit_assist: u8,
    pub m_pit_release_assist: u8,
    pub m_ers_assist: u8,
    pub m_drs_assist: u8,
    pub m_dynamic_racing_line: u8,
    pub m_dynamic_racing_line_type: u8,
    pub m_game_mode: u8,
    pub m_rule_set: u8,
    pub m_time_of_day: u32,
    pub m_session_length: u8,
    pub m_speed_units_lead_player: u8,
    pub m_temperature_units_lead_player: u8,
    pub m_speed_units_secondary_player: u8,
    pub m_temperature_units_secondary_player: u8,
    pub m_num_safety_car_periods: u8,
    pub m_num_virtual_safety_car_periods: u8,
    pub m_num_red_flag_periods: u8,
    pub m_equal_car_performance: u8,
    pub m_recovery_mode: u8,
    pub m_flashback_limit: u8,
    pub m_surface_type: u8,
    pub m_low_fuel_mode: u8,
    pub m_race_starts: u8,
    pub m_tyre_temperature: u8,
    pub m_pit_lane_tyre_sim: u8,
    pub m_car_damage: u8,
    pub m_car_damage_rate: u8,
    pub m_collisions: u8,
    pub m_collisions_off_for_first_lap_only: u8,
    pub m_mp_unsafe_pit_release: u8,
    pub m_mp_off_for_griefing: u8,
    pub m_corner_cutting_stringency: u8,
    pub m_parc_ferme_rules: u8,
    pub m_pit_stop_experience: u8,
    pub m_safety_car: u8,
    pub m_safety_car_experience: u8,
    pub m_formation_lap: u8,
    pub m_formation_lap_experience: u8,
    pub m_red_flags: u8,
    pub m_affects_licence_level_solo: u8,
    pub m_affects_licence_level_mp: u8,
    pub m_num_sessions_in_weekend: u8,
    pub m_weekend_structure: [u8; 12],
    pub m_sector2_lap_distance_start: f32,
    pub m_sector3_lap_distance_start: f32,
}
